Grammar

    0 $accept: program $end

    1 program: exp

    2 id: ID

    3 decs: dec decs
    4     | %empty

    5 dec: tydec
    6    | vardec
    7    | fundec

    8 tydec: TYPE id EQ ty

    9 ty: id
   10   | LBRACE tyfields RBRACE
   11   | ARRAY OF id

   12 tyfields: tyfield tyfieldList
   13         | %empty

   14 tyfield: id COLON id

   15 tyfieldList: COMMA tyfield tyfieldList
   16            | %empty

   17 vardec: VAR id ASSIGN exp
   18       | VAR id COLON id ASSIGN exp

   19 fundec: FUNCTION id LPAREN tyfields RPAREN EQ exp
   20       | FUNCTION id LPAREN tyfields RPAREN COLON id EQ exp

   21 lvalue: id
   22       | lvalue DOT id
   23       | lvalue LBRACK exp RBRACK
   24       | id LBRACK exp RBRACK

   25 exp: lvalue
   26    | NIL
   27    | INT
   28    | STRING
   29    | LPAREN RPAREN
   30    | funcall
   31    | binexp
   32    | boolexp
   33    | reccrea
   34    | LPAREN exp seq RPAREN
   35    | lvalue ASSIGN exp
   36    | ifexp
   37    | WHILE exp DO exp
   38    | FOR id ASSIGN exp TO exp DO exp
   39    | BREAK
   40    | LET decs IN expseq END
   41    | id LBRACK exp RBRACK OF exp

   42 expseq: exp seq
   43       | %empty

   44 seq: SEMICOLON exp seq
   45    | %empty

   46 funcall: id LPAREN exp funargs RPAREN
   47        | id LPAREN RPAREN

   48 funargs: COMMA exp funargs
   49        | %empty

   50 binexp: MINUS exp
   51       | exp PLUS exp
   52       | exp MINUS exp
   53       | exp TIMES exp
   54       | exp DIVIDE exp
   55       | exp EQ exp
   56       | exp NEQ exp
   57       | exp GT exp
   58       | exp LT exp
   59       | exp LE exp
   60       | exp GE exp

   61 boolexp: exp AND exp
   62        | exp OR exp

   63 reccrea: id LBRACE recfield recfields RBRACE
   64        | id LBRACE RBRACE

   65 recfield: id EQ exp

   66 recfields: COMMA recfield recfields
   67          | %empty

   68 ifexp: IF exp THEN exp
   69      | IF exp THEN exp ELSE exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID <sval> (258) 2
STRING <sval> (259) 28
INT <ival> (260) 27
COMMA (261) 15 48 66
COLON (262) 14 18 20
SEMICOLON (263) 44
LPAREN (264) 19 20 29 34 46 47
RPAREN (265) 19 20 29 34 46 47
LBRACK (266) 23 24 41
RBRACK (267) 23 24 41
LBRACE (268) 10 63 64
RBRACE (269) 10 63 64
DOT (270) 22
PLUS (271) 51
MINUS (272) 50 52
TIMES (273) 53
DIVIDE (274) 54
EQ (275) 8 19 20 55 65
NEQ (276) 56
LT (277) 58
LE (278) 59
GT (279) 57
GE (280) 60
AND (281) 61
OR (282) 62
ASSIGN (283) 17 18 35 38
ARRAY (284) 11
IF (285) 68 69
THEN (286) 68 69
ELSE (287) 69
WHILE (288) 37
FOR (289) 38
TO (290) 38
DO (291) 37 38
LET (292) 40
IN (293) 40
END (294) 40
OF (295) 11 41
BREAK (296) 39
NIL (297) 26
FUNCTION (298) 19 20
VAR (299) 17 18
TYPE (300) 8
LOWPREC (301)
UMINUS (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program <exp> (49)
    on left: 1, on right: 0
id <symbol> (50)
    on left: 2, on right: 8 9 11 14 17 18 19 20 21 22 24 38 41 46 47
    63 64 65
decs <decList> (51)
    on left: 3 4, on right: 3 40
dec <dec> (52)
    on left: 5 6 7, on right: 3
tydec <namety> (53)
    on left: 8, on right: 5
ty <ty> (54)
    on left: 9 10 11, on right: 8
tyfields <fieldList> (55)
    on left: 12 13, on right: 10 19 20
tyfield <field> (56)
    on left: 14, on right: 12 15
tyfieldList <fieldList> (57)
    on left: 15 16, on right: 12 15
vardec <dec> (58)
    on left: 17 18, on right: 6
fundec <fundec> (59)
    on left: 19 20, on right: 7
lvalue <var> (60)
    on left: 21 22 23 24, on right: 22 23 25 35
exp <exp> (61)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41, on right:
    1 17 18 19 20 23 24 34 35 37 38 41 42 44 46 48 50 51 52 53 54 55
    56 57 58 59 60 61 62 65 68 69
expseq <exp> (62)
    on left: 42 43, on right: 40
seq <expList> (63)
    on left: 44 45, on right: 34 42 44
funcall <exp> (64)
    on left: 46 47, on right: 30
funargs <expList> (65)
    on left: 48 49, on right: 46 48
binexp <exp> (66)
    on left: 50 51 52 53 54 55 56 57 58 59 60, on right: 31
boolexp <exp> (67)
    on left: 61 62, on right: 32
reccrea <exp> (68)
    on left: 63 64, on right: 33
recfield <efield> (69)
    on left: 65, on right: 63 66
recfields <efieldList> (70)
    on left: 66 67, on right: 63 66
ifexp <exp> (71)
    on left: 68 69, on right: 36


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    id       go to state 13
    lvalue   go to state 14
    exp      go to state 15
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 1

    2 id: ID .

    $default  reduce using rule 2 (id)


State 2

   28 exp: STRING .

    $default  reduce using rule 28 (exp)


State 3

   27 exp: INT .

    $default  reduce using rule 27 (exp)


State 4

   29 exp: LPAREN . RPAREN
   34    | LPAREN . exp seq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 21
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 22
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 5

   50 binexp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 23
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 6

   68 ifexp: IF . exp THEN exp
   69      | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 24
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 7

   37 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 25
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 8

   38 exp: FOR . id ASSIGN exp TO exp DO exp

    ID  shift, and go to state 1

    id  go to state 26


State 9

   40 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 27
    VAR       shift, and go to state 28
    TYPE      shift, and go to state 29

    $default  reduce using rule 4 (decs)

    decs    go to state 30
    dec     go to state 31
    tydec   go to state 32
    vardec  go to state 33
    fundec  go to state 34


State 10

   39 exp: BREAK .

    $default  reduce using rule 39 (exp)


State 11

   26 exp: NIL .

    $default  reduce using rule 26 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 35


State 13

   21 lvalue: id .
   24       | id . LBRACK exp RBRACK
   41 exp: id . LBRACK exp RBRACK OF exp
   46 funcall: id . LPAREN exp funargs RPAREN
   47        | id . LPAREN RPAREN
   63 reccrea: id . LBRACE recfield recfields RBRACE
   64        | id . LBRACE RBRACE

    LPAREN  shift, and go to state 36
    LBRACK  shift, and go to state 37
    LBRACE  shift, and go to state 38

    $default  reduce using rule 21 (lvalue)


State 14

   22 lvalue: lvalue . DOT id
   23       | lvalue . LBRACK exp RBRACK
   25 exp: lvalue .
   35    | lvalue . ASSIGN exp

    LBRACK  shift, and go to state 39
    DOT     shift, and go to state 40
    ASSIGN  shift, and go to state 41

    $default  reduce using rule 25 (exp)


State 15

    1 program: exp .
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 1 (program)


State 16

   30 exp: funcall .

    $default  reduce using rule 30 (exp)


State 17

   31 exp: binexp .

    $default  reduce using rule 31 (exp)


State 18

   32 exp: boolexp .

    $default  reduce using rule 32 (exp)


State 19

   33 exp: reccrea .

    $default  reduce using rule 33 (exp)


State 20

   36 exp: ifexp .

    $default  reduce using rule 36 (exp)


State 21

   29 exp: LPAREN RPAREN .

    $default  reduce using rule 29 (exp)


State 22

   34 exp: LPAREN exp . seq RPAREN
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    SEMICOLON  shift, and go to state 54
    PLUS       shift, and go to state 42
    MINUS      shift, and go to state 43
    TIMES      shift, and go to state 44
    DIVIDE     shift, and go to state 45
    EQ         shift, and go to state 46
    NEQ        shift, and go to state 47
    LT         shift, and go to state 48
    LE         shift, and go to state 49
    GT         shift, and go to state 50
    GE         shift, and go to state 51
    AND        shift, and go to state 52
    OR         shift, and go to state 53

    $default  reduce using rule 45 (seq)

    seq  go to state 55


State 23

   50 binexp: MINUS exp .
   51       | exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    $default  reduce using rule 50 (binexp)


State 24

   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp
   68 ifexp: IF exp . THEN exp
   69      | IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53
    THEN    shift, and go to state 56


State 25

   37 exp: WHILE exp . DO exp
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53
    DO      shift, and go to state 57


State 26

   38 exp: FOR id . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 58


State 27

   19 fundec: FUNCTION . id LPAREN tyfields RPAREN EQ exp
   20       | FUNCTION . id LPAREN tyfields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    id  go to state 59


State 28

   17 vardec: VAR . id ASSIGN exp
   18       | VAR . id COLON id ASSIGN exp

    ID  shift, and go to state 1

    id  go to state 60


State 29

    8 tydec: TYPE . id EQ ty

    ID  shift, and go to state 1

    id  go to state 61


State 30

   40 exp: LET decs . IN expseq END

    IN  shift, and go to state 62


State 31

    3 decs: dec . decs

    FUNCTION  shift, and go to state 27
    VAR       shift, and go to state 28
    TYPE      shift, and go to state 29

    $default  reduce using rule 4 (decs)

    decs    go to state 63
    dec     go to state 31
    tydec   go to state 32
    vardec  go to state 33
    fundec  go to state 34


State 32

    5 dec: tydec .

    $default  reduce using rule 5 (dec)


State 33

    6 dec: vardec .

    $default  reduce using rule 6 (dec)


State 34

    7 dec: fundec .

    $default  reduce using rule 7 (dec)


State 35

    0 $accept: program $end .

    $default  accept


State 36

   46 funcall: id LPAREN . exp funargs RPAREN
   47        | id LPAREN . RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 64
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 65
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 37

   24 lvalue: id LBRACK . exp RBRACK
   41 exp: id LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 66
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 38

   63 reccrea: id LBRACE . recfield recfields RBRACE
   64        | id LBRACE . RBRACE

    ID      shift, and go to state 1
    RBRACE  shift, and go to state 67

    id        go to state 68
    recfield  go to state 69


State 39

   23 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 70
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 40

   22 lvalue: lvalue DOT . id

    ID  shift, and go to state 1

    id  go to state 71


State 41

   35 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 72
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 42

   51 binexp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 73
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 43

   52 binexp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 74
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 44

   53 binexp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 75
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 45

   54 binexp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 76
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 46

   55 binexp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 77
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 47

   56 binexp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 78
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 48

   58 binexp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 79
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 49

   59 binexp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 80
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 50

   57 binexp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 81
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 51

   60 binexp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 82
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 52

   61 boolexp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 83
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 53

   62 boolexp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 84
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 54

   44 seq: SEMICOLON . exp seq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 85
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 55

   34 exp: LPAREN exp seq . RPAREN

    RPAREN  shift, and go to state 86


State 56

   68 ifexp: IF exp THEN . exp
   69      | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 87
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 57

   37 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 88
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 58

   38 exp: FOR id ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 89
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 59

   19 fundec: FUNCTION id . LPAREN tyfields RPAREN EQ exp
   20       | FUNCTION id . LPAREN tyfields RPAREN COLON id EQ exp

    LPAREN  shift, and go to state 90


State 60

   17 vardec: VAR id . ASSIGN exp
   18       | VAR id . COLON id ASSIGN exp

    COLON   shift, and go to state 91
    ASSIGN  shift, and go to state 92


State 61

    8 tydec: TYPE id . EQ ty

    EQ  shift, and go to state 93


State 62

   40 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 43 (expseq)

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 94
    expseq   go to state 95
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 63

    3 decs: dec decs .

    $default  reduce using rule 3 (decs)


State 64

   47 funcall: id LPAREN RPAREN .

    $default  reduce using rule 47 (funcall)


State 65

   46 funcall: id LPAREN exp . funargs RPAREN
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    COMMA   shift, and go to state 96
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 49 (funargs)

    funargs  go to state 97


State 66

   24 lvalue: id LBRACK exp . RBRACK
   41 exp: id LBRACK exp . RBRACK OF exp
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    RBRACK  shift, and go to state 98
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53


State 67

   64 reccrea: id LBRACE RBRACE .

    $default  reduce using rule 64 (reccrea)


State 68

   65 recfield: id . EQ exp

    EQ  shift, and go to state 99


State 69

   63 reccrea: id LBRACE recfield . recfields RBRACE

    COMMA  shift, and go to state 100

    $default  reduce using rule 67 (recfields)

    recfields  go to state 101


State 70

   23 lvalue: lvalue LBRACK exp . RBRACK
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    RBRACK  shift, and go to state 102
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53


State 71

   22 lvalue: lvalue DOT id .

    $default  reduce using rule 22 (lvalue)


State 72

   35 exp: lvalue ASSIGN exp .
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 35 (exp)


State 73

   51 binexp: exp . PLUS exp
   51       | exp PLUS exp .
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    $default  reduce using rule 51 (binexp)


State 74

   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   52       | exp MINUS exp .
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    $default  reduce using rule 52 (binexp)


State 75

   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   53       | exp TIMES exp .
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    $default  reduce using rule 53 (binexp)


State 76

   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   54       | exp DIVIDE exp .
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    $default  reduce using rule 54 (binexp)


State 77

   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   55       | exp EQ exp .
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 55 (binexp)


State 78

   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   56       | exp NEQ exp .
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 56 (binexp)


State 79

   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   58       | exp LT exp .
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 58 (binexp)


State 80

   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   59       | exp LE exp .
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 59 (binexp)


State 81

   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   57       | exp GT exp .
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 57 (binexp)


State 82

   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   60       | exp GE exp .
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 60 (binexp)


State 83

   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   61        | exp AND exp .
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51

    $default  reduce using rule 61 (boolexp)


State 84

   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp
   62        | exp OR exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52

    $default  reduce using rule 62 (boolexp)


State 85

   44 seq: SEMICOLON exp . seq
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    SEMICOLON  shift, and go to state 54
    PLUS       shift, and go to state 42
    MINUS      shift, and go to state 43
    TIMES      shift, and go to state 44
    DIVIDE     shift, and go to state 45
    EQ         shift, and go to state 46
    NEQ        shift, and go to state 47
    LT         shift, and go to state 48
    LE         shift, and go to state 49
    GT         shift, and go to state 50
    GE         shift, and go to state 51
    AND        shift, and go to state 52
    OR         shift, and go to state 53

    $default  reduce using rule 45 (seq)

    seq  go to state 103


State 86

   34 exp: LPAREN exp seq RPAREN .

    $default  reduce using rule 34 (exp)


State 87

   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp
   68 ifexp: IF exp THEN exp .
   69      | IF exp THEN exp . ELSE exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53
    ELSE    shift, and go to state 104

    $default  reduce using rule 68 (ifexp)


State 88

   37 exp: WHILE exp DO exp .
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 37 (exp)


State 89

   38 exp: FOR id ASSIGN exp . TO exp DO exp
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53
    TO      shift, and go to state 105


State 90

   19 fundec: FUNCTION id LPAREN . tyfields RPAREN EQ exp
   20       | FUNCTION id LPAREN . tyfields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    $default  reduce using rule 13 (tyfields)

    id        go to state 106
    tyfields  go to state 107
    tyfield   go to state 108


State 91

   18 vardec: VAR id COLON . id ASSIGN exp

    ID  shift, and go to state 1

    id  go to state 109


State 92

   17 vardec: VAR id ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 110
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 93

    8 tydec: TYPE id EQ . ty

    ID      shift, and go to state 1
    LBRACE  shift, and go to state 111
    ARRAY   shift, and go to state 112

    id  go to state 113
    ty  go to state 114


State 94

   42 expseq: exp . seq
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    SEMICOLON  shift, and go to state 54
    PLUS       shift, and go to state 42
    MINUS      shift, and go to state 43
    TIMES      shift, and go to state 44
    DIVIDE     shift, and go to state 45
    EQ         shift, and go to state 46
    NEQ        shift, and go to state 47
    LT         shift, and go to state 48
    LE         shift, and go to state 49
    GT         shift, and go to state 50
    GE         shift, and go to state 51
    AND        shift, and go to state 52
    OR         shift, and go to state 53

    $default  reduce using rule 45 (seq)

    seq  go to state 115


State 95

   40 exp: LET decs IN expseq . END

    END  shift, and go to state 116


State 96

   48 funargs: COMMA . exp funargs

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 117
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 97

   46 funcall: id LPAREN exp funargs . RPAREN

    RPAREN  shift, and go to state 118


State 98

   24 lvalue: id LBRACK exp RBRACK .
   41 exp: id LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 119

    $default  reduce using rule 24 (lvalue)


State 99

   65 recfield: id EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 120
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 100

   66 recfields: COMMA . recfield recfields

    ID  shift, and go to state 1

    id        go to state 68
    recfield  go to state 121


State 101

   63 reccrea: id LBRACE recfield recfields . RBRACE

    RBRACE  shift, and go to state 122


State 102

   23 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 23 (lvalue)


State 103

   44 seq: SEMICOLON exp seq .

    $default  reduce using rule 44 (seq)


State 104

   69 ifexp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 123
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 105

   38 exp: FOR id ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 124
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 106

   14 tyfield: id . COLON id

    COLON  shift, and go to state 125


State 107

   19 fundec: FUNCTION id LPAREN tyfields . RPAREN EQ exp
   20       | FUNCTION id LPAREN tyfields . RPAREN COLON id EQ exp

    RPAREN  shift, and go to state 126


State 108

   12 tyfields: tyfield . tyfieldList

    COMMA  shift, and go to state 127

    $default  reduce using rule 16 (tyfieldList)

    tyfieldList  go to state 128


State 109

   18 vardec: VAR id COLON id . ASSIGN exp

    ASSIGN  shift, and go to state 129


State 110

   17 vardec: VAR id ASSIGN exp .
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 17 (vardec)


State 111

   10 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 13 (tyfields)

    id        go to state 106
    tyfields  go to state 130
    tyfield   go to state 108


State 112

   11 ty: ARRAY . OF id

    OF  shift, and go to state 131


State 113

    9 ty: id .

    $default  reduce using rule 9 (ty)


State 114

    8 tydec: TYPE id EQ ty .

    $default  reduce using rule 8 (tydec)


State 115

   42 expseq: exp seq .

    $default  reduce using rule 42 (expseq)


State 116

   40 exp: LET decs IN expseq END .

    $default  reduce using rule 40 (exp)


State 117

   48 funargs: COMMA exp . funargs
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    COMMA   shift, and go to state 96
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 49 (funargs)

    funargs  go to state 132


State 118

   46 funcall: id LPAREN exp funargs RPAREN .

    $default  reduce using rule 46 (funcall)


State 119

   41 exp: id LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 133
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 120

   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp
   65 recfield: id EQ exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 65 (recfield)


State 121

   66 recfields: COMMA recfield . recfields

    COMMA  shift, and go to state 100

    $default  reduce using rule 67 (recfields)

    recfields  go to state 134


State 122

   63 reccrea: id LBRACE recfield recfields RBRACE .

    $default  reduce using rule 63 (reccrea)


State 123

   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp
   69 ifexp: IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 69 (ifexp)


State 124

   38 exp: FOR id ASSIGN exp TO exp . DO exp
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53
    DO      shift, and go to state 135


State 125

   14 tyfield: id COLON . id

    ID  shift, and go to state 1

    id  go to state 136


State 126

   19 fundec: FUNCTION id LPAREN tyfields RPAREN . EQ exp
   20       | FUNCTION id LPAREN tyfields RPAREN . COLON id EQ exp

    COLON  shift, and go to state 137
    EQ     shift, and go to state 138


State 127

   15 tyfieldList: COMMA . tyfield tyfieldList

    ID  shift, and go to state 1

    id       go to state 106
    tyfield  go to state 139


State 128

   12 tyfields: tyfield tyfieldList .

    $default  reduce using rule 12 (tyfields)


State 129

   18 vardec: VAR id COLON id ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 140
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 130

   10 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 141


State 131

   11 ty: ARRAY OF . id

    ID  shift, and go to state 1

    id  go to state 142


State 132

   48 funargs: COMMA exp funargs .

    $default  reduce using rule 48 (funargs)


State 133

   41 exp: id LBRACK exp RBRACK OF exp .
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 41 (exp)


State 134

   66 recfields: COMMA recfield recfields .

    $default  reduce using rule 66 (recfields)


State 135

   38 exp: FOR id ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 143
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 136

   14 tyfield: id COLON id .

    $default  reduce using rule 14 (tyfield)


State 137

   20 fundec: FUNCTION id LPAREN tyfields RPAREN COLON . id EQ exp

    ID  shift, and go to state 1

    id  go to state 144


State 138

   19 fundec: FUNCTION id LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 145
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 139

   15 tyfieldList: COMMA tyfield . tyfieldList

    COMMA  shift, and go to state 127

    $default  reduce using rule 16 (tyfieldList)

    tyfieldList  go to state 146


State 140

   18 vardec: VAR id COLON id ASSIGN exp .
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 18 (vardec)


State 141

   10 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 10 (ty)


State 142

   11 ty: ARRAY OF id .

    $default  reduce using rule 11 (ty)


State 143

   38 exp: FOR id ASSIGN exp TO exp DO exp .
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 38 (exp)


State 144

   20 fundec: FUNCTION id LPAREN tyfields RPAREN COLON id . EQ exp

    EQ  shift, and go to state 147


State 145

   19 fundec: FUNCTION id LPAREN tyfields RPAREN EQ exp .
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 19 (fundec)


State 146

   15 tyfieldList: COMMA tyfield tyfieldList .

    $default  reduce using rule 15 (tyfieldList)


State 147

   20 fundec: FUNCTION id LPAREN tyfields RPAREN COLON id EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 148
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 148

   20 fundec: FUNCTION id LPAREN tyfields RPAREN COLON id EQ exp .
   51 binexp: exp . PLUS exp
   52       | exp . MINUS exp
   53       | exp . TIMES exp
   54       | exp . DIVIDE exp
   55       | exp . EQ exp
   56       | exp . NEQ exp
   57       | exp . GT exp
   58       | exp . LT exp
   59       | exp . LE exp
   60       | exp . GE exp
   61 boolexp: exp . AND exp
   62        | exp . OR exp

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45
    EQ      shift, and go to state 46
    NEQ     shift, and go to state 47
    LT      shift, and go to state 48
    LE      shift, and go to state 49
    GT      shift, and go to state 50
    GE      shift, and go to state 51
    AND     shift, and go to state 52
    OR      shift, and go to state 53

    $default  reduce using rule 20 (fundec)

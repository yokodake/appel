Grammar

    0 $accept: program $end

    1 program: exp

    2 id: ID

    3 decs: dec decs
    4     | %empty

    5 dec: tydec
    6    | vardec
    7    | fundec

    8 tydec: "type" id "=" ty

    9 ty: id
   10   | "{" tyfields "}"
   11   | "array" "of" id

   12 tyfields: tyfield tyfieldList
   13         | %empty

   14 tyfield: id ":" id

   15 tyfieldList: "," tyfield tyfieldList
   16            | %empty

   17 vardec: "var" id ":=" exp
   18       | "var" id ":" id "=" exp

   19 fundec: "function" id "(" tyfields ")" "=" exp
   20       | "function" id "(" tyfields ")" ":" id "=" exp

   21 lvalue: id
   22       | lvalue "." id
   23       | lvalue "[" exp "]"
   24       | id "[" exp "]"

   25 exp: lvalue
   26    | "nil"
   27    | INT
   28    | STRING
   29    | "(" ")"
   30    | funcall
   31    | binexp
   32    | boolexp
   33    | reccrea
   34    | "(" exp seq ")"
   35    | lvalue ":=" exp
   36    | ifexp
   37    | "while" exp "do" exp
   38    | "for" id ":=" exp "to" exp "do" exp
   39    | "break"
   40    | "let" decs "in" expseq "end"
   41    | id "[" exp "]" "of" exp

   42 expseq: exp seq
   43       | %empty

   44 seq: ";" exp seq
   45    | %empty

   46 funcall: id "(" exp funargs ")"
   47        | id "(" ")"

   48 funargs: "," exp funargs
   49        | %empty

   50 binexp: "-" exp
   51       | exp "+" exp
   52       | exp "-" exp
   53       | exp "*" exp
   54       | exp "/" exp
   55       | exp "=" exp
   56       | exp "!=" exp
   57       | exp ">" exp
   58       | exp "<" exp
   59       | exp "<=" exp
   60       | exp ">=" exp

   61 boolexp: exp "&" exp
   62        | exp "|" exp

   63 reccrea: id "{" recfield recfields "}"
   64        | id "{" "}"

   65 recfield: id "=" exp

   66 recfields: "," recfield recfields
   67          | %empty

   68 ifexp: "if" exp "then" exp
   69      | "if" exp "then" exp "else" exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sval> (258) 2
    STRING <str> (259) 28
    INT <ival> (260) 27
    "," (261) 15 48 66
    ":" (262) 14 18 20
    ";" (263) 44
    "(" (264) 19 20 29 34 46 47
    ")" (265) 19 20 29 34 46 47
    "[" (266) 23 24 41
    "]" (267) 23 24 41
    "{" (268) 10 63 64
    "}" (269) 10 63 64
    "." (270) 22
    "+" (271) 51
    "-" (272) 50 52
    "*" (273) 53
    "/" (274) 54
    "=" (275) 8 18 19 20 55 65
    "!=" (276) 56
    "<" (277) 58
    "<=" (278) 59
    ">" (279) 57
    ">=" (280) 60
    "&" (281) 61
    "|" (282) 62
    ":=" (283) 17 35 38
    "array" (284) 11
    "if" (285) 68 69
    "then" (286) 68 69
    "else" (287) 69
    "while" (288) 37
    "for" (289) 38
    "to" (290) 38
    "do" (291) 37 38
    "let" (292) 40
    "in" (293) 40
    "end" (294) 40
    "of" (295) 11 41
    "break" (296) 39
    "nil" (297) 26
    "function" (298) 19 20
    "var" (299) 17 18
    "type" (300) 8
    LOWPREC (301)
    UMINUS (302)


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program <exp> (49)
        on left: 1
        on right: 0
    id <symbol> (50)
        on left: 2
        on right: 8 9 11 14 17 18 19 20 21 22 24 38 41 46 47 63 64 65
    decs <decList> (51)
        on left: 3 4
        on right: 3 40
    dec <dec> (52)
        on left: 5 6 7
        on right: 3
    tydec <namety> (53)
        on left: 8
        on right: 5
    ty <ty> (54)
        on left: 9 10 11
        on right: 8
    tyfields <fieldList> (55)
        on left: 12 13
        on right: 10 19 20
    tyfield <field> (56)
        on left: 14
        on right: 12 15
    tyfieldList <fieldList> (57)
        on left: 15 16
        on right: 12 15
    vardec <dec> (58)
        on left: 17 18
        on right: 6
    fundec <fundec> (59)
        on left: 19 20
        on right: 7
    lvalue <var> (60)
        on left: 21 22 23 24
        on right: 22 23 25 35
    exp <exp> (61)
        on left: 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
        on right: 1 17 18 19 20 23 24 34 35 37 38 41 42 44 46 48 50 51 52 53 54 55 56 57 58 59 60 61 62 65 68 69
    expseq <exp> (62)
        on left: 42 43
        on right: 40
    seq <expList> (63)
        on left: 44 45
        on right: 34 42 44
    funcall <exp> (64)
        on left: 46 47
        on right: 30
    funargs <expList> (65)
        on left: 48 49
        on right: 46 48
    binexp <exp> (66)
        on left: 50 51 52 53 54 55 56 57 58 59 60
        on right: 31
    boolexp <exp> (67)
        on left: 61 62
        on right: 32
    reccrea <exp> (68)
        on left: 63 64
        on right: 33
    recfield <efield> (69)
        on left: 65
        on right: 63 66
    recfields <efieldList> (70)
        on left: 66 67
        on right: 63 66
    ifexp <exp> (71)
        on left: 68 69
        on right: 36


State 0

    0 $accept: . program $end

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    program  go to state 12
    id       go to state 13
    lvalue   go to state 14
    exp      go to state 15
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 1

    2 id: ID .

    $default  reduce using rule 2 (id)


State 2

   28 exp: STRING .

    $default  reduce using rule 28 (exp)


State 3

   27 exp: INT .

    $default  reduce using rule 27 (exp)


State 4

   29 exp: "(" . ")"
   34    | "(" . exp seq ")"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    ")"      shift, and go to state 21
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 22
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 5

   50 binexp: "-" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 23
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 6

   68 ifexp: "if" . exp "then" exp
   69      | "if" . exp "then" exp "else" exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 24
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 7

   37 exp: "while" . exp "do" exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 25
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 8

   38 exp: "for" . id ":=" exp "to" exp "do" exp

    ID  shift, and go to state 1

    id  go to state 26


State 9

   40 exp: "let" . decs "in" expseq "end"

    "function"  shift, and go to state 27
    "var"       shift, and go to state 28
    "type"      shift, and go to state 29

    $default  reduce using rule 4 (decs)

    decs    go to state 30
    dec     go to state 31
    tydec   go to state 32
    vardec  go to state 33
    fundec  go to state 34


State 10

   39 exp: "break" .

    $default  reduce using rule 39 (exp)


State 11

   26 exp: "nil" .

    $default  reduce using rule 26 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 35


State 13

   21 lvalue: id .
   24       | id . "[" exp "]"
   41 exp: id . "[" exp "]" "of" exp
   46 funcall: id . "(" exp funargs ")"
   47        | id . "(" ")"
   63 reccrea: id . "{" recfield recfields "}"
   64        | id . "{" "}"

    "("  shift, and go to state 36
    "["  shift, and go to state 37
    "{"  shift, and go to state 38

    $default  reduce using rule 21 (lvalue)


State 14

   22 lvalue: lvalue . "." id
   23       | lvalue . "[" exp "]"
   25 exp: lvalue .
   35    | lvalue . ":=" exp

    "["   shift, and go to state 39
    "."   shift, and go to state 40
    ":="  shift, and go to state 41

    $default  reduce using rule 25 (exp)


State 15

    1 program: exp .
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 1 (program)


State 16

   30 exp: funcall .

    $default  reduce using rule 30 (exp)


State 17

   31 exp: binexp .

    $default  reduce using rule 31 (exp)


State 18

   32 exp: boolexp .

    $default  reduce using rule 32 (exp)


State 19

   33 exp: reccrea .

    $default  reduce using rule 33 (exp)


State 20

   36 exp: ifexp .

    $default  reduce using rule 36 (exp)


State 21

   29 exp: "(" ")" .

    $default  reduce using rule 29 (exp)


State 22

   34 exp: "(" exp . seq ")"
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    ";"   shift, and go to state 54
    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 45 (seq)

    seq  go to state 55


State 23

   50 binexp: "-" exp .
   51       | exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    $default  reduce using rule 50 (binexp)


State 24

   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp
   68 ifexp: "if" exp . "then" exp
   69      | "if" exp . "then" exp "else" exp

    "+"     shift, and go to state 42
    "-"     shift, and go to state 43
    "*"     shift, and go to state 44
    "/"     shift, and go to state 45
    "="     shift, and go to state 46
    "!="    shift, and go to state 47
    "<"     shift, and go to state 48
    "<="    shift, and go to state 49
    ">"     shift, and go to state 50
    ">="    shift, and go to state 51
    "&"     shift, and go to state 52
    "|"     shift, and go to state 53
    "then"  shift, and go to state 56


State 25

   37 exp: "while" exp . "do" exp
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53
    "do"  shift, and go to state 57


State 26

   38 exp: "for" id . ":=" exp "to" exp "do" exp

    ":="  shift, and go to state 58


State 27

   19 fundec: "function" . id "(" tyfields ")" "=" exp
   20       | "function" . id "(" tyfields ")" ":" id "=" exp

    ID  shift, and go to state 1

    id  go to state 59


State 28

   17 vardec: "var" . id ":=" exp
   18       | "var" . id ":" id "=" exp

    ID  shift, and go to state 1

    id  go to state 60


State 29

    8 tydec: "type" . id "=" ty

    ID  shift, and go to state 1

    id  go to state 61


State 30

   40 exp: "let" decs . "in" expseq "end"

    "in"  shift, and go to state 62


State 31

    3 decs: dec . decs

    "function"  shift, and go to state 27
    "var"       shift, and go to state 28
    "type"      shift, and go to state 29

    $default  reduce using rule 4 (decs)

    decs    go to state 63
    dec     go to state 31
    tydec   go to state 32
    vardec  go to state 33
    fundec  go to state 34


State 32

    5 dec: tydec .

    $default  reduce using rule 5 (dec)


State 33

    6 dec: vardec .

    $default  reduce using rule 6 (dec)


State 34

    7 dec: fundec .

    $default  reduce using rule 7 (dec)


State 35

    0 $accept: program $end .

    $default  accept


State 36

   46 funcall: id "(" . exp funargs ")"
   47        | id "(" . ")"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    ")"      shift, and go to state 64
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 65
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 37

   24 lvalue: id "[" . exp "]"
   41 exp: id "[" . exp "]" "of" exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 66
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 38

   63 reccrea: id "{" . recfield recfields "}"
   64        | id "{" . "}"

    ID   shift, and go to state 1
    "}"  shift, and go to state 67

    id        go to state 68
    recfield  go to state 69


State 39

   23 lvalue: lvalue "[" . exp "]"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 70
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 40

   22 lvalue: lvalue "." . id

    ID  shift, and go to state 1

    id  go to state 71


State 41

   35 exp: lvalue ":=" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 72
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 42

   51 binexp: exp "+" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 73
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 43

   52 binexp: exp "-" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 74
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 44

   53 binexp: exp "*" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 75
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 45

   54 binexp: exp "/" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 76
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 46

   55 binexp: exp "=" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 77
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 47

   56 binexp: exp "!=" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 78
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 48

   58 binexp: exp "<" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 79
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 49

   59 binexp: exp "<=" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 80
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 50

   57 binexp: exp ">" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 81
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 51

   60 binexp: exp ">=" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 82
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 52

   61 boolexp: exp "&" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 83
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 53

   62 boolexp: exp "|" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 84
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 54

   44 seq: ";" . exp seq

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 85
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 55

   34 exp: "(" exp seq . ")"

    ")"  shift, and go to state 86


State 56

   68 ifexp: "if" exp "then" . exp
   69      | "if" exp "then" . exp "else" exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 87
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 57

   37 exp: "while" exp "do" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 88
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 58

   38 exp: "for" id ":=" . exp "to" exp "do" exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 89
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 59

   19 fundec: "function" id . "(" tyfields ")" "=" exp
   20       | "function" id . "(" tyfields ")" ":" id "=" exp

    "("  shift, and go to state 90


State 60

   17 vardec: "var" id . ":=" exp
   18       | "var" id . ":" id "=" exp

    ":"   shift, and go to state 91
    ":="  shift, and go to state 92


State 61

    8 tydec: "type" id . "=" ty

    "="  shift, and go to state 93


State 62

   40 exp: "let" decs "in" . expseq "end"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    $default  reduce using rule 43 (expseq)

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 94
    expseq   go to state 95
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 63

    3 decs: dec decs .

    $default  reduce using rule 3 (decs)


State 64

   47 funcall: id "(" ")" .

    $default  reduce using rule 47 (funcall)


State 65

   46 funcall: id "(" exp . funargs ")"
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    ","   shift, and go to state 96
    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 49 (funargs)

    funargs  go to state 97


State 66

   24 lvalue: id "[" exp . "]"
   41 exp: id "[" exp . "]" "of" exp
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "]"   shift, and go to state 98
    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53


State 67

   64 reccrea: id "{" "}" .

    $default  reduce using rule 64 (reccrea)


State 68

   65 recfield: id . "=" exp

    "="  shift, and go to state 99


State 69

   63 reccrea: id "{" recfield . recfields "}"

    ","  shift, and go to state 100

    $default  reduce using rule 67 (recfields)

    recfields  go to state 101


State 70

   23 lvalue: lvalue "[" exp . "]"
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "]"   shift, and go to state 102
    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53


State 71

   22 lvalue: lvalue "." id .

    $default  reduce using rule 22 (lvalue)


State 72

   35 exp: lvalue ":=" exp .
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 35 (exp)


State 73

   51 binexp: exp . "+" exp
   51       | exp "+" exp .
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "*"  shift, and go to state 44
    "/"  shift, and go to state 45

    $default  reduce using rule 51 (binexp)


State 74

   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   52       | exp "-" exp .
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "*"  shift, and go to state 44
    "/"  shift, and go to state 45

    $default  reduce using rule 52 (binexp)


State 75

   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   53       | exp "*" exp .
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    $default  reduce using rule 53 (binexp)


State 76

   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   54       | exp "/" exp .
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    $default  reduce using rule 54 (binexp)


State 77

   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   55       | exp "=" exp .
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"  shift, and go to state 42
    "-"  shift, and go to state 43
    "*"  shift, and go to state 44
    "/"  shift, and go to state 45

    "="   error (nonassociative)
    "!="  error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)

    $default  reduce using rule 55 (binexp)


State 78

   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   56       | exp "!=" exp .
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"  shift, and go to state 42
    "-"  shift, and go to state 43
    "*"  shift, and go to state 44
    "/"  shift, and go to state 45

    "="   error (nonassociative)
    "!="  error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)

    $default  reduce using rule 56 (binexp)


State 79

   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   58       | exp "<" exp .
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"  shift, and go to state 42
    "-"  shift, and go to state 43
    "*"  shift, and go to state 44
    "/"  shift, and go to state 45

    "="   error (nonassociative)
    "!="  error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)

    $default  reduce using rule 58 (binexp)


State 80

   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   59       | exp "<=" exp .
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"  shift, and go to state 42
    "-"  shift, and go to state 43
    "*"  shift, and go to state 44
    "/"  shift, and go to state 45

    "="   error (nonassociative)
    "!="  error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)

    $default  reduce using rule 59 (binexp)


State 81

   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   57       | exp ">" exp .
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"  shift, and go to state 42
    "-"  shift, and go to state 43
    "*"  shift, and go to state 44
    "/"  shift, and go to state 45

    "="   error (nonassociative)
    "!="  error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)

    $default  reduce using rule 57 (binexp)


State 82

   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   60       | exp ">=" exp .
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"  shift, and go to state 42
    "-"  shift, and go to state 43
    "*"  shift, and go to state 44
    "/"  shift, and go to state 45

    "="   error (nonassociative)
    "!="  error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)

    $default  reduce using rule 60 (binexp)


State 83

   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   61        | exp "&" exp .
   62        | exp . "|" exp

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51

    $default  reduce using rule 61 (boolexp)


State 84

   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp
   62        | exp "|" exp .

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52

    $default  reduce using rule 62 (boolexp)


State 85

   44 seq: ";" exp . seq
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    ";"   shift, and go to state 54
    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 45 (seq)

    seq  go to state 103


State 86

   34 exp: "(" exp seq ")" .

    $default  reduce using rule 34 (exp)


State 87

   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp
   68 ifexp: "if" exp "then" exp .
   69      | "if" exp "then" exp . "else" exp

    "+"     shift, and go to state 42
    "-"     shift, and go to state 43
    "*"     shift, and go to state 44
    "/"     shift, and go to state 45
    "="     shift, and go to state 46
    "!="    shift, and go to state 47
    "<"     shift, and go to state 48
    "<="    shift, and go to state 49
    ">"     shift, and go to state 50
    ">="    shift, and go to state 51
    "&"     shift, and go to state 52
    "|"     shift, and go to state 53
    "else"  shift, and go to state 104

    $default  reduce using rule 68 (ifexp)


State 88

   37 exp: "while" exp "do" exp .
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 37 (exp)


State 89

   38 exp: "for" id ":=" exp . "to" exp "do" exp
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53
    "to"  shift, and go to state 105


State 90

   19 fundec: "function" id "(" . tyfields ")" "=" exp
   20       | "function" id "(" . tyfields ")" ":" id "=" exp

    ID  shift, and go to state 1

    $default  reduce using rule 13 (tyfields)

    id        go to state 106
    tyfields  go to state 107
    tyfield   go to state 108


State 91

   18 vardec: "var" id ":" . id "=" exp

    ID  shift, and go to state 1

    id  go to state 109


State 92

   17 vardec: "var" id ":=" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 110
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 93

    8 tydec: "type" id "=" . ty

    ID       shift, and go to state 1
    "{"      shift, and go to state 111
    "array"  shift, and go to state 112

    id  go to state 113
    ty  go to state 114


State 94

   42 expseq: exp . seq
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    ";"   shift, and go to state 54
    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 45 (seq)

    seq  go to state 115


State 95

   40 exp: "let" decs "in" expseq . "end"

    "end"  shift, and go to state 116


State 96

   48 funargs: "," . exp funargs

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 117
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 97

   46 funcall: id "(" exp funargs . ")"

    ")"  shift, and go to state 118


State 98

   24 lvalue: id "[" exp "]" .
   41 exp: id "[" exp "]" . "of" exp

    "of"  shift, and go to state 119

    $default  reduce using rule 24 (lvalue)


State 99

   65 recfield: id "=" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 120
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 100

   66 recfields: "," . recfield recfields

    ID  shift, and go to state 1

    id        go to state 68
    recfield  go to state 121


State 101

   63 reccrea: id "{" recfield recfields . "}"

    "}"  shift, and go to state 122


State 102

   23 lvalue: lvalue "[" exp "]" .

    $default  reduce using rule 23 (lvalue)


State 103

   44 seq: ";" exp seq .

    $default  reduce using rule 44 (seq)


State 104

   69 ifexp: "if" exp "then" exp "else" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 123
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 105

   38 exp: "for" id ":=" exp "to" . exp "do" exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 124
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 106

   14 tyfield: id . ":" id

    ":"  shift, and go to state 125


State 107

   19 fundec: "function" id "(" tyfields . ")" "=" exp
   20       | "function" id "(" tyfields . ")" ":" id "=" exp

    ")"  shift, and go to state 126


State 108

   12 tyfields: tyfield . tyfieldList

    ","  shift, and go to state 127

    $default  reduce using rule 16 (tyfieldList)

    tyfieldList  go to state 128


State 109

   18 vardec: "var" id ":" id . "=" exp

    "="  shift, and go to state 129


State 110

   17 vardec: "var" id ":=" exp .
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 17 (vardec)


State 111

   10 ty: "{" . tyfields "}"

    ID  shift, and go to state 1

    $default  reduce using rule 13 (tyfields)

    id        go to state 106
    tyfields  go to state 130
    tyfield   go to state 108


State 112

   11 ty: "array" . "of" id

    "of"  shift, and go to state 131


State 113

    9 ty: id .

    $default  reduce using rule 9 (ty)


State 114

    8 tydec: "type" id "=" ty .

    $default  reduce using rule 8 (tydec)


State 115

   42 expseq: exp seq .

    $default  reduce using rule 42 (expseq)


State 116

   40 exp: "let" decs "in" expseq "end" .

    $default  reduce using rule 40 (exp)


State 117

   48 funargs: "," exp . funargs
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    ","   shift, and go to state 96
    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 49 (funargs)

    funargs  go to state 132


State 118

   46 funcall: id "(" exp funargs ")" .

    $default  reduce using rule 46 (funcall)


State 119

   41 exp: id "[" exp "]" "of" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 133
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 120

   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp
   65 recfield: id "=" exp .

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 65 (recfield)


State 121

   66 recfields: "," recfield . recfields

    ","  shift, and go to state 100

    $default  reduce using rule 67 (recfields)

    recfields  go to state 134


State 122

   63 reccrea: id "{" recfield recfields "}" .

    $default  reduce using rule 63 (reccrea)


State 123

   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp
   69 ifexp: "if" exp "then" exp "else" exp .

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 69 (ifexp)


State 124

   38 exp: "for" id ":=" exp "to" exp . "do" exp
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53
    "do"  shift, and go to state 135


State 125

   14 tyfield: id ":" . id

    ID  shift, and go to state 1

    id  go to state 136


State 126

   19 fundec: "function" id "(" tyfields ")" . "=" exp
   20       | "function" id "(" tyfields ")" . ":" id "=" exp

    ":"  shift, and go to state 137
    "="  shift, and go to state 138


State 127

   15 tyfieldList: "," . tyfield tyfieldList

    ID  shift, and go to state 1

    id       go to state 106
    tyfield  go to state 139


State 128

   12 tyfields: tyfield tyfieldList .

    $default  reduce using rule 12 (tyfields)


State 129

   18 vardec: "var" id ":" id "=" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 140
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 130

   10 ty: "{" tyfields . "}"

    "}"  shift, and go to state 141


State 131

   11 ty: "array" "of" . id

    ID  shift, and go to state 1

    id  go to state 142


State 132

   48 funargs: "," exp funargs .

    $default  reduce using rule 48 (funargs)


State 133

   41 exp: id "[" exp "]" "of" exp .
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 41 (exp)


State 134

   66 recfields: "," recfield recfields .

    $default  reduce using rule 66 (recfields)


State 135

   38 exp: "for" id ":=" exp "to" exp "do" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 143
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 136

   14 tyfield: id ":" id .

    $default  reduce using rule 14 (tyfield)


State 137

   20 fundec: "function" id "(" tyfields ")" ":" . id "=" exp

    ID  shift, and go to state 1

    id  go to state 144


State 138

   19 fundec: "function" id "(" tyfields ")" "=" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 145
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 139

   15 tyfieldList: "," tyfield . tyfieldList

    ","  shift, and go to state 127

    $default  reduce using rule 16 (tyfieldList)

    tyfieldList  go to state 146


State 140

   18 vardec: "var" id ":" id "=" exp .
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 18 (vardec)


State 141

   10 ty: "{" tyfields "}" .

    $default  reduce using rule 10 (ty)


State 142

   11 ty: "array" "of" id .

    $default  reduce using rule 11 (ty)


State 143

   38 exp: "for" id ":=" exp "to" exp "do" exp .
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 38 (exp)


State 144

   20 fundec: "function" id "(" tyfields ")" ":" id . "=" exp

    "="  shift, and go to state 147


State 145

   19 fundec: "function" id "(" tyfields ")" "=" exp .
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 19 (fundec)


State 146

   15 tyfieldList: "," tyfield tyfieldList .

    $default  reduce using rule 15 (tyfieldList)


State 147

   20 fundec: "function" id "(" tyfields ")" ":" id "=" . exp

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    "("      shift, and go to state 4
    "-"      shift, and go to state 5
    "if"     shift, and go to state 6
    "while"  shift, and go to state 7
    "for"    shift, and go to state 8
    "let"    shift, and go to state 9
    "break"  shift, and go to state 10
    "nil"    shift, and go to state 11

    id       go to state 13
    lvalue   go to state 14
    exp      go to state 148
    funcall  go to state 16
    binexp   go to state 17
    boolexp  go to state 18
    reccrea  go to state 19
    ifexp    go to state 20


State 148

   20 fundec: "function" id "(" tyfields ")" ":" id "=" exp .
   51 binexp: exp . "+" exp
   52       | exp . "-" exp
   53       | exp . "*" exp
   54       | exp . "/" exp
   55       | exp . "=" exp
   56       | exp . "!=" exp
   57       | exp . ">" exp
   58       | exp . "<" exp
   59       | exp . "<=" exp
   60       | exp . ">=" exp
   61 boolexp: exp . "&" exp
   62        | exp . "|" exp

    "+"   shift, and go to state 42
    "-"   shift, and go to state 43
    "*"   shift, and go to state 44
    "/"   shift, and go to state 45
    "="   shift, and go to state 46
    "!="  shift, and go to state 47
    "<"   shift, and go to state 48
    "<="  shift, and go to state 49
    ">"   shift, and go to state 50
    ">="  shift, and go to state 51
    "&"   shift, and go to state 52
    "|"   shift, and go to state 53

    $default  reduce using rule 20 (fundec)
